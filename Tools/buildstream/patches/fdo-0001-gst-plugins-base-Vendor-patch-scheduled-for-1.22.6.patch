From 9678858a153749f62b52232617c9d7d4ad6d12ac Mon Sep 17 00:00:00 2001
From: Philippe Normand <philn@igalia.com>
Date: Fri, 21 Jul 2023 09:02:56 +0100
Subject: [PATCH] gst-plugins-base: Vendor patch scheduled for 1.22.6

---
 ...-identity-sinkpad-parsebin-leakage-w.patch | 79 +++++++++++++++++++
 1 file changed, 79 insertions(+)
 create mode 100644 patches/gstreamer/0001-decodebin3-avoid-identity-sinkpad-parsebin-leakage-w.patch

diff --git a/patches/gstreamer/0001-decodebin3-avoid-identity-sinkpad-parsebin-leakage-w.patch b/patches/gstreamer/0001-decodebin3-avoid-identity-sinkpad-parsebin-leakage-w.patch
new file mode 100644
index 000000000..a5fe5e2fc
--- /dev/null
+++ b/patches/gstreamer/0001-decodebin3-avoid-identity-sinkpad-parsebin-leakage-w.patch
@@ -0,0 +1,79 @@
+From 9f67b866b9fd56d97388bed280fe2e336e11c9ba Mon Sep 17 00:00:00 2001
+From: Haihua Hu <jared.hu@nxp.com>
+Date: Thu, 18 May 2023 16:08:03 +0800
+Subject: [PATCH] decodebin3: avoid identity, sinkpad, parsebin leakage when
+ reset input
+
+when reset_input, need remove identity/parsebin from decodebin3
+when release_pad, need call free or reset input if collection
+didn't change
+
+Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/4664>
+---
+ .../gst/playback/gstdecodebin3.c              | 28 ++++---------------
+ 1 file changed, 5 insertions(+), 23 deletions(-)
+
+diff --git a/subprojects/gst-plugins-base/gst/playback/gstdecodebin3.c b/subprojects/gst-plugins-base/gst/playback/gstdecodebin3.c
+index a1a43ab64a..95efdbf924 100644
+--- a/subprojects/gst-plugins-base/gst/playback/gstdecodebin3.c
++++ b/subprojects/gst-plugins-base/gst/playback/gstdecodebin3.c
+@@ -1129,37 +1129,17 @@ gst_decodebin3_release_pad (GstElement * element, GstPad * pad)
+   gst_element_post_message (GST_ELEMENT_CAST (dbin), msg);
+   update_requested_selection (dbin);
+ 
+-  gst_ghost_pad_set_target (GST_GHOST_PAD (input->ghost_sink), NULL);
+   if (input->parsebin) {
+-    gst_bin_remove (GST_BIN (dbin), input->parsebin);
+-    gst_element_set_state (input->parsebin, GST_STATE_NULL);
+-    g_signal_handler_disconnect (input->parsebin, input->pad_removed_sigid);
+-    g_signal_handler_disconnect (input->parsebin, input->pad_added_sigid);
+-    g_signal_handler_disconnect (input->parsebin, input->drained_sigid);
+     gst_pad_remove_probe (input->parsebin_sink, probe_id);
+-    gst_object_unref (input->parsebin);
+-    gst_object_unref (input->parsebin_sink);
+-
+-    input->parsebin = NULL;
+-    input->parsebin_sink = NULL;
+-  }
+-  if (input->identity) {
+-    GstPad *idpad = gst_element_get_static_pad (input->identity, "src");
+-    DecodebinInputStream *stream = find_input_stream_for_pad (dbin, idpad);
+-    gst_object_unref (idpad);
+-    remove_input_stream (dbin, stream);
+-    gst_element_set_state (input->identity, GST_STATE_NULL);
+-    gst_bin_remove (GST_BIN (dbin), input->identity);
+-    gst_object_unref (input->identity);
+-    input->identity = NULL;
+   }
+ 
++beach:
+   if (!input->is_main) {
+     dbin->other_inputs = g_list_remove (dbin->other_inputs, input);
+     free_input (dbin, input);
+-  }
++  } else
++    reset_input (dbin, input);
+ 
+-beach:
+   INPUT_UNLOCK (dbin);
+   return;
+ }
+@@ -1177,6 +1157,7 @@ reset_input (GstDecodebin3 * dbin, DecodebinInput * input)
+     g_signal_handler_disconnect (input->parsebin, input->pad_added_sigid);
+     g_signal_handler_disconnect (input->parsebin, input->drained_sigid);
+     gst_element_set_state (input->parsebin, GST_STATE_NULL);
++    gst_bin_remove (GST_BIN (dbin), input->parsebin);
+     gst_clear_object (&input->parsebin);
+     gst_clear_object (&input->parsebin_sink);
+   }
+@@ -1186,6 +1167,7 @@ reset_input (GstDecodebin3 * dbin, DecodebinInput * input)
+     gst_object_unref (idpad);
+     remove_input_stream (dbin, stream);
+     gst_element_set_state (input->identity, GST_STATE_NULL);
++    gst_bin_remove (GST_BIN (dbin), input->identity);
+     gst_clear_object (&input->identity);
+   }
+   if (input->collection)
+-- 
+2.40.1
+
-- 
2.41.0

